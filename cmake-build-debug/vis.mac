# Macro file for the visualization setting for the initialization phase 
# of the B2 example when running in interactive mode
#

# Use these open statements to open selected visualization
#
# Use this open statement to create an OpenGL view:
/vis/open OGL 900x900-0+0
#
# Use this open statement to create an OpenInventor view:
#/vis/open OIX
#
# Use this open statement to create a .prim file suitable for
# viewing in DAWN:
#/vis/open DAWNFILE
#
# Use this open statement to create a .heprep file suitable for
# viewing in HepRApp:
#/vis/open HepRepFile
#
/event/verbose 0
/control/verbose 0
/run/verbose 0
/tracking/verbose 0

# Use this open statement to create a .wrl file suitable for
# viewing in a VRML viewer:
#/vis/open VRML2FILE
#
# Disable auto refresh and quieten vis messages whilst scene and
# trajectories are established:
/vis/viewer/set/autoRefresh false
/vis/verbose errors
#
# Draw geometry:
/vis/drawVolume
#
# Specify view angle:
/vis/viewer/set/viewpointVector 0 0 1
/vis/viewer/set/lightsVector 0 0 1
#
# Specify zoom value:
/vis/viewer/zoom 0.2
#
# Specify style (surface, wireframe, auxiliary edges,...)
/vis/viewer/set/style wireframe
/vis/viewer/set/auxiliaryEdge true
/vis/viewer/set/lineSegmentsPerCircle 20
#
# Draw coordinate axes:
/vis/scene/add/axes 0 0 0 1 mm
#
# Draw smooth trajectories at end of event, showing trajectory points
# as markers 2 pixels wide:
/vis/scene/add/trajectories smooth
/vis/modeling/trajectories/create/drawByCharge
/vis/modeling/trajectories/drawByCharge-0/default/setDrawStepPts true
/vis/modeling/trajectories/drawByCharge-0/default/setStepPtsSize 2
# (if too many tracks cause core dump => /tracking/storeTrajectory 0)
#
# Draw hits at end of event:
/vis/scene/add/hits
#
# To draw only neutrons:
#/vis/filtering/trajectories/create/particleFilter
#/vis/filtering/trajectories/particleFilter-0/add neutron
#
# To invert the above, drawing all particles except neutrons,
# keep the above two lines but also add:
#/vis/filtering/trajectories/particleFilter-0/invert true
#
# Many other options are available with /vis/modeling and /vis/filtering.
# For example, to select colour by particle ID:
/vis/modeling/trajectories/create/drawByParticleID
/vis/modeling/trajectories/drawByParticleID-0/default/setDrawStepPts true
# To select or override default colours (note: e+ is blue by default):
/vis/modeling/trajectories/list
/vis/modeling/trajectories/drawByParticleID-0/set e+ yellow
#
# To get nice view
# Make the "World" box invisible
/vis/geometry/set/visibility World 0 false
#/vis/geometry/set/visibility Shield 0 false
# "Layer" is transparent blue to represent water
/vis/geometry/set/colour mcp 0 0 0 0.5 .1
/vis/geometry/set/colour pore 0 0.5 0.5 0.5 1
#/vis/geometry/set/visibility pore 0 false
/vis/viewer/set/style surface
/vis/viewer/set/hiddenMarker true
#/vis/viewer/set/viewpointThetaPhi 120 150
/vis/viewer/set/viewpointThetaPhi -90 0
#
# To superimpose all of the events from a given run:
/vis/scene/endOfEventAction accumulate
#
# Re-establish auto refreshing and verbosity:
/vis/viewer/set/autoRefresh true
/vis/verbose warnings
#
# For file-based drivers, use this to create an empty detector view:
#/vis/viewer/flush
#
#source define
#/gps/pos/
#/gps/ang/type iso
#/gps/energy 29.7 keV
/run/beamOn 1
